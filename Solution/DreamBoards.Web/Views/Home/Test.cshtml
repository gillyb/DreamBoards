@model DreamBoards.Web.ViewModels.CanvasPageViewModel
		   
@{
    ViewBag.Title = "DreamBoards | Create your own DreamBoard";
	ViewBag.BodyId = "canvas-page";
	ViewBag.BodyClass = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="left-section float">
	<div class="header">
		<span class="logo"></span>
		<div class="action-buttons">
			<span class="action-link save">Save</span> | <span class="action-link save-as-image">Save As Image</span> |  Create Catalog | Brag | Share
		</div>
	</div>
	@{
		var boardId = "";
		var editOnly = "";
		if (Model.Board != null) { boardId = "data-board-id=" + @Model.Board.Id; } else { boardId = ""; }
		if (!Model.IsOwner) { editOnly = "data-edit-only=true"; }
	}
	<div class="canvas" @boardId @editOnly>
		<div class="teaser">Drag products here to get started...</div>
	</div>
	
	<div class="basic-details">
		<div class="label float">Name</div>
		<div class="input float"><input type="text" id="board-name" value="@Model.Board.Title"></div>
		<div class="label float">Description</div>
		<div class="input float"><textarea id="board-description">@Model.Board.Description</textarea></div>
		<div class="breaker"></div>
	</div>
</div>

<div class="right-section float">
	<div class="header"></div>
	<div class="browse-section round-corners">
		<div class="category-browser">
			SELECT CATEGORY : 
			<select id="category-dropdown">
				@foreach (var category in Model.Cateogories)
				{
					<option value="@category.Value">@category.Key</option>
				}
			</select>
		</div>
		
		<div class="items-container">
			
		</div>
	</div>
</div>

<script language="javascript" type="text/javascript">
	var boardItems = [];
</script>
@foreach (var boardItem in Model.BoardItems)
{
	<script language="javascript" type="text/javascript">
		boardItems.push({
			ItemId: @boardItem.ItemId,
			BoardId: @boardItem.BoardId,
			ProductId: @boardItem.ProductId,
			CatalogId: @boardItem.CatalogId,
			ImageUrl: '@boardItem.ImageUrl',
			PosX: @boardItem.PosX,
			PosY: @boardItem.PosY,
			Width: @boardItem.Width,
			Height: @boardItem.Height,
			Rotation: @boardItem.Rotation,
			Layer: @boardItem.Layer
		});
	</script>
}

<div class="breaker"></div>